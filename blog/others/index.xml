<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>还没找到合适的分类 | kiki</title>
    <link>https://xueqing.github.io/blog/others/</link>
      <atom:link href="https://xueqing.github.io/blog/others/index.xml" rel="self" type="application/rss+xml" />
    <description>还没找到合适的分类</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language>
    <image>
      <url>https://xueqing.github.io/img/icon-192.png</url>
      <title>还没找到合适的分类</title>
      <link>https://xueqing.github.io/blog/others/</link>
    </image>
    
    <item>
      <title>logstash 配置文件学习</title>
      <link>https://xueqing.github.io/blog/others/logstash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/others/logstash/</guid>
      <description>

&lt;h2 id=&#34;配置文件举例&#34;&gt;配置文件举例&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;默认位置是 &lt;code&gt;/usr/local/logstash/config/logstash-sample.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;匹配需求描述&#34;&gt;匹配需求描述&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;先需要统计后台服务的日志, 主要有下面 4 类&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;日志类型&lt;/th&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;服务器日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[localtime][log_level][module_name] {event_info}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[2019-07-25 09:26:57.315][debug ][EasyRedis] {Connect Redis success}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;设备认证日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[localtime][log_level][module_name][dev_name][dev_id][dev_ip] {event_info}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[2019-07-25 09:26:07.317][warn  ][GbsipServerService][cam1][34020000001320000001][192.168.10.199] {ON}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;用户认证日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[localtime][log_level][module_name][user_id][user_ip] {event_info}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[2019-07-25 09:26:14.049][warn  ][GbsipClientService][34020000001110000001][192.168.1.160] {online}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;用户操作日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[localtime][log_level][module_name][user_id][user_ip][dev_id] {event_info}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[2019-07-25 09:38:31.630][trace ][GbsipClientService][34020000001110000001][192.168.1.160][34020000001320000001] {Bye}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;现在的需求包括

&lt;ul&gt;
&lt;li&gt;1 过滤掉不符合上述 4 类格式的日志&lt;/li&gt;
&lt;li&gt;2 可以一键搜索上述 4 种日志, 即查看所有满足要求的日志&lt;/li&gt;
&lt;li&gt;3 可以一键搜索上述任意一种日志&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;实现方法

&lt;ul&gt;
&lt;li&gt;统一日志格式 &lt;code&gt;[type][localtime][log_level][module_name][user_id][user_ip][dev_name][dev_id][dev_ip] {event_info}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;缺少的字段为空&lt;/li&gt;
&lt;li&gt;filter 的正则匹配表达式为 &lt;code&gt;\[%{DATA:localtime}\]\[%{DATA:log_level}\]\[%{DATA:module_name}\]\[%{NUMBER:type}\]\[%{DATA:user_id}\]\[%{DATA:user_ip}\]\[%{DATA:dev_name}\]\[%{DATA:dev_id}\]\[%{DATA:dev_ip}\]\ \{%{DATA:event_info}\}&lt;/code&gt;, 可用于分割日志&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;统一后日志举例&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;[2019-07-25 09:26:57.315][debug ][EasyRedis][1][][][][][] {Connect Redis success}
[2019-07-25 09:26:07.317][warn  ][GbsipServerService][2][][][cam1][34020000001320000001][192.168.10.199] {ON}
[2019-07-25 09:26:14.049][warn  ][GbsipClientService][3][34020000001110000001][192.168.1.160][][][] {online}
[2019-07-25 09:38:31.630][trace ][GbsipClientService][4][34020000001110000001][192.168.1.160][][34020000001320000001][] {Bye}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;日志收集架构&#34;&gt;日志收集架构&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/beats/filebeat&#34; target=&#34;_blank&#34;&gt;filebeat&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;轻量级日志收集工具, 用于搜集文件数据, 比 logstash 占用资源更少&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;filebeat.yml&lt;/code&gt; 中会配置指定的监听文件&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/logstash&#34; target=&#34;_blank&#34;&gt;logstash&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;用于日志收集, 具有 filter 功能, 可以过滤分析日志, 然后发送到消息队列&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/kibana&#34; target=&#34;_blank&#34;&gt;kibana&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;供前端的页面再进行搜索和图表可视化, 调用Elasticsearch的接口返回的数据进行可视化&lt;/li&gt;
&lt;li&gt;用 Kibana 来搜索、查看, 并和存储在 ElasticSearch 索引中的数据进行交互&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/&#34; target=&#34;_blank&#34;&gt;ElasticSearch&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;搜索服务器, 提供了一个分布式多用户能力的全文搜索引擎, 基于 RESTful web 接口&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;完整配置文件&#34;&gt;完整配置文件&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;# Sample Logstash configuration for creating a simple
# Beats -&amp;gt; Logstash -&amp;gt; Elasticsearch pipeline.

input {
  # 从日志文件中获取信息, 使用 filebeat 推送日志到 logstash
  beats {
    port =&amp;gt; 5044
  }
}

filter {
  # 如果搜索不到 &amp;quot;] {&amp;quot; 关键字, 丢弃该消息
  # 其他日志内容均保证不含 &amp;quot;] {&amp;quot; 关键字
  if &amp;quot;] {&amp;quot; not in [message] {
    # drop 可以跳过某些不想统计的日志信息, 当某条日志信息符合 if 规则时
    # 该条信息则不会在 out 中出现, logstash 将直接进行下一条日志的解析
    drop { }
  } else {
    grok {
      # 自定义正则匹配
      match =&amp;gt; {&amp;quot;message&amp;quot; =&amp;gt; &amp;quot;\[%{DATA:localtime}\]\[%{DATA:log_level}\]%{DATA:c1}\[%{DATA:c2}\[%{DATA:module_name}\]\[%{NUMBER:type}\]\[%{DATA:user_id}\]\[%{DATA:user_ip}\]\[%{DATA:dev_name}\]\[%{DATA:dev_id}\]\[%{DATA:dev_ip}\]\ \{%{DATA:event_info}\}&amp;quot;}
    }

    # 匹配服务器日志成功
    if &amp;quot;[1]&amp;quot; in [message] {
      # mutate 是做转换用的
      mutate {
          # 添加字段 _log_info_, 便于搜索所有日志
          add_field =&amp;gt; {
            &amp;quot;_log_info_&amp;quot; =&amp;gt; &amp;quot;%{event_info}&amp;quot;
          }
          # 添加字段 _serv_log_, 便于搜索服务器日志
          add_field =&amp;gt; {
            &amp;quot;_serv_log_&amp;quot; =&amp;gt; &amp;quot;%{event_info}&amp;quot;
          }
      }
    }
    # 匹配设备认证日志成功
    if &amp;quot;[2]&amp;quot; in [message] {
      mutate {
          add_field =&amp;gt; {
            &amp;quot;_log_info_&amp;quot; =&amp;gt; &amp;quot;[%{dev_name}] [%{dev_id}] [%{dev_ip}] %{event_info}&amp;quot;
          }
          # 添加字段 _dev_log_, 便于搜索服务器日志
          add_field =&amp;gt; {
            &amp;quot;_dev_log_&amp;quot; =&amp;gt; &amp;quot;[%{dev_name}] [%{dev_id}] [%{dev_ip}] %{event_info}&amp;quot;
          }
      }
    }
    # 匹配用户认证日志成功
    if &amp;quot;[3]&amp;quot; in [message] {
      mutate {
          add_field =&amp;gt; {
            &amp;quot;_log_info_&amp;quot; =&amp;gt; &amp;quot;[%{user_id}] [%{user_ip}] %{event_info}&amp;quot;
          }
          # 添加字段 _user_log_, 便于搜索服务器日志
          add_field =&amp;gt; {
            &amp;quot;_user_log_&amp;quot; =&amp;gt; &amp;quot;[%{user_id}] [%{user_ip}] %{event_info}&amp;quot;
          }
      }
    }
    # 匹配用户操作日志成功
    if &amp;quot;[4]&amp;quot; in [message] {
      mutate {
          add_field =&amp;gt; {
            &amp;quot;_log_info_&amp;quot; =&amp;gt; &amp;quot;[%{user_id}] [%{user_ip}] [%{dev_id}] %{event_info}&amp;quot;
          }
          # 添加字段 _user_dev_log_, 便于搜索服务器日志
          add_field =&amp;gt; {
            &amp;quot;_user_dev_log_&amp;quot; =&amp;gt; &amp;quot;[%{user_id}] [%{user_ip}] [%{dev_id}] %{event_info}&amp;quot;
          }
      }
    }
  }
}

output {
  # 将输出保存到 elasticsearch
  elasticsearch {
    hosts =&amp;gt; [&amp;quot;http://192.168.1.240:9200&amp;quot;]
    index =&amp;gt; &amp;quot;%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sphinx 安装和配置</title>
      <link>https://xueqing.github.io/blog/others/sphinx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/others/sphinx/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 安装 chocolatey，类似于 OS X 的 Homebrew
# 管理员打开 powershell
Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))
# 测试 choco，在终端输入 choco 或 choco -?
choco -? # 查看帮助文档
# 安装 python
choco install python
# 安装 setuptools 和 pip
python -m ensurepip --default-pip
# 如果上述命令不生效，使用源码安装
## 下载 [get-pip.py](https://bootstrap.pypa.io/get-pip.py)
## 使用源码安装和升级 pip。且会确定 setuptools 和 wheel 的环境
python get-pip.py [--prefix=/usr/local/]
# 更新 pip/setuptools/wheel
python -m pip install -U pip setuptools wheel
# 查看可执行文件路径。可能需要将可执行文件路径加入系统 PATH
python -m site --user-base
## Unix：修改 ~/.profile，添加 BIN_DIR/bin，执行 source 生效
## windows：添加 BIN_DIR/../Scripts，执行 source 生效
# 创建虚拟环境 python3 -m venv &amp;lt;DIR&amp;gt;
python3 -m venv for_sphinx
# 激活虚拟环境
## Unix：source &amp;lt;DIR&amp;gt;/bin/activate
source for_sphinx/bin/activate
## windows：&amp;lt;DIR&amp;gt;\Scripts\activate
for_sphinx\Scripts\activate
# 取消激活
deactivate
# 删除一个虚拟环境，只需要删除对应目录
rm -rf for_sphinx
# 安装 pipenv，是 Python 项目的依赖管理器。方便管理多个虚拟环境
pip install --user pipenv
# 使用 pipenv 安装包 pipenv install package_name
# 运行 pipenv run python filename.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/install&#34; target=&#34;_blank&#34;&gt;Installing Chocolatey&lt;/a&gt;
&lt;a href=&#34;https://packaging.python.org/tutorials/installing-packages/&#34; target=&#34;_blank&#34;&gt;Installing Packages&lt;/a&gt;
&lt;a href=&#34;https://packaging.python.org/tutorials/managing-dependencies/#managing-application-dependencies&#34; target=&#34;_blank&#34;&gt;Managing Application Dependencies&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UAC 虚拟化</title>
      <link>https://xueqing.github.io/blog/others/uac_virtualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/others/uac_virtualization/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#windows-7-%e4%b8%8a%e7%9a%84-uac-%e8%99%9a%e6%8b%9f%e5%8c%96&#34;&gt;Windows 7 上的 UAC 虚拟化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uac-%e8%99%9a%e6%8b%9f%e5%8c%96%e7%9a%84%e7%8e%b0%e8%b1%a1&#34;&gt;UAC 虚拟化的现象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%80%9d%e8%80%83&#34;&gt;思考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%80%bb%e7%bb%93&#34;&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;在早期的 Windows 版本(XP,NTY,95 等)，通常由管理员安装应用。这些应用可以自由地读写系统文件和注册表。但是，标准养护运行相同的应用会导致错误弹窗。&lt;/p&gt;

&lt;h2 id=&#34;windows-7-上的-uac-虚拟化&#34;&gt;Windows 7 上的 UAC 虚拟化&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;在 Windows 7 上通过重定向写操作到用户配置的一个特殊位置来改善标准账户的应用兼容性&lt;/li&gt;
&lt;li&gt;例如：如果标准用户运行一个应用，尝试写&lt;code&gt;C:\Program Files\National Instruments\Settings.ini&lt;/code&gt;，这个写操作会被重定向到&lt;code&gt;C:\User\Username\AppData\Local\VirtualStore\Program Files\National Instruments\Settings.ini&lt;/code&gt;。同样地，尝试注册到&lt;code&gt;HKEY_LOCAL_MACHINE\Software\National Instruments\&lt;/code&gt;文件会被重定向到&lt;code&gt;HKEY_CURRENT_USER\Software\Classes\VirtualStore\MACHINE\Software\National Instruments or HKEY_USERS\...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;uac-虚拟化的现象&#34;&gt;UAC 虚拟化的现象&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;如果有下面的现象表明应用可能是受到 UAC 虚拟化的影响

&lt;ul&gt;
&lt;li&gt;应用写入 &lt;code&gt;Program Files&lt;/code&gt;，&lt;code&gt;Windows&lt;/code&gt;目录或系统根目录(通常是 C 盘)，但是在这些位置不能找到文件&lt;/li&gt;
&lt;li&gt;应用写入 Windows 注册表，特比是&lt;code&gt;HKLM/Software&lt;/code&gt;，但是看不到注册表更新&lt;/li&gt;
&lt;li&gt;切换到另外一个用户账户时，应用不能找到之前写入 &lt;code&gt;Program Files&lt;/code&gt;，&lt;code&gt;Windows&lt;/code&gt;目录或系统根目录(通常是 C 盘)的文件，或者应用找到了这些文件的旧版本&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;思考&#34;&gt;思考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UAC 虚拟化只用于辅助在 Windows Vista 之前开发的应用的兼容性。Windows 7 的新应用不应该执行写操作到敏感的系统文件，而且不应该依赖 UAC 虚拟化来提供必要的重定向&lt;/li&gt;
&lt;li&gt;当更新已有代码再 Windows 7 上运行时，确保应用在运行时只存储数据在每个用户的位置&lt;/li&gt;
&lt;li&gt;判断需要写数据文件到已有目录。被所有用户使用的通用数据应写入全局的公共位置，由所有用户共享。其他的数据应写入每个用户的位置&lt;/li&gt;
&lt;li&gt;在确定合适的位置后，确保不会硬编码路径&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;通过 UAC 虚拟化，Windows 7 支持标准用户运行开发的需要管理员权限的应用。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.ni.com/t5/Windows-7/UAC-Virtualization-and-how-it-affects-your-Installers/gpm-p/3477163?profile.language=en&#34; target=&#34;_blank&#34;&gt;UAC Virtualization and how it affects your Installers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>开发人员最佳实践</title>
      <link>https://xueqing.github.io/blog/others/developers_best_practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/others/developers_best_practices/</guid>
      <description>

&lt;ol&gt;
&lt;li&gt;坚持阅读现存软件源码&lt;/li&gt;
&lt;li&gt;进入下一阶段之前完成文档：设计方法、要诀和技巧、特殊函数/命令/指令、学习的教训、特殊场景、调试方法、最好的实践、任何对未来有帮助的&lt;/li&gt;
&lt;li&gt;遵循定义好的规范，不要创建规范：文件命名习俗、函数/模块命名习俗、变量命名习俗、历史/缩进/注释、可读性指导、do/don&amp;rsquo;t 列表&lt;/li&gt;
&lt;li&gt;写的代码应该被评审：不好的代码、不遵循规范、没有考虑性能、历史/缩进/注释不合适、可读性差、未关闭打开的文件、未释放申请的内存、太多全局变量、太多硬编码、不好的错误处理、没有模块化、重复的代码&lt;/li&gt;
&lt;li&gt;像宗教信仰一样遵循测试&lt;/li&gt;
&lt;li&gt;保持代码和文件的安全性&lt;/li&gt;
&lt;li&gt;保持工具和技术是已使用的&lt;/li&gt;
&lt;li&gt;持续学习&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;有用的书&#34;&gt;有用的书&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Better-Software-Faster-Practices-Prototyping-ebook/dp/B00L2GR7LQ//httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;Better Software. Faster!: Best Practices in Virtual Prototyping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Art-Lean-Software-Development/dp/0596517319/httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;The Art of Lean Software Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Software-Architecture-Practice-3rd-Engineering/dp/0321815734/httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;Software Architecture in Practice (3rd Edition) (SEI Series in Software Engineering)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Software-Requirements-Developer-Best-Practices/dp/0735679665/httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;Software Requirements (3rd Edition) (Developer Best Practices)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Software-Requirement-Patterns-Developer-Practices/dp/0735623988/httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;Software Requirement Patterns (Developer Best Practices)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Software-Engineering-Best-Practices-Successful/dp/007162161X/httpwwwtuto0a-20&#34; target=&#34;_blank&#34;&gt;Software Engineering Best Practices: Lessons from Successful Projects in the Top Companies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
