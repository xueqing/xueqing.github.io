<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memcached | kiki</title>
    <link>https://xueqing.github.io/blog/database/memcached/</link>
      <atom:link href="https://xueqing.github.io/blog/database/memcached/index.xml" rel="self" type="application/rss+xml" />
    <description>Memcached</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language>
    <image>
      <url>https://xueqing.github.io/img/icon-192.png</url>
      <title>Memcached</title>
      <link>https://xueqing.github.io/blog/database/memcached/</link>
    </image>
    
    <item>
      <title>前言</title>
      <link>https://xueqing.github.io/blog/database/memcached/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/database/memcached/readme/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%e7%9b%ae%e5%bd%95&#34;&gt;目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;1_intro.md&#34; target=&#34;_blank&#34;&gt;1 Memcached 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;2_store_command.md&#34; target=&#34;_blank&#34;&gt;2 Memcached 存储命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;3_retrieval_command.md&#34; target=&#34;_blank&#34;&gt;3 Memcached 查找命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;4_statistics_command.md&#34; target=&#34;_blank&#34;&gt;4 Memcached 统计命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;5_examples.md&#34; target=&#34;_blank&#34;&gt;5 Memcached 实例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/Memcached/Memcached-tutorial.html&#34; target=&#34;_blank&#34;&gt;Memcached 教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands&#34; target=&#34;_blank&#34;&gt;Redis 命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1 Memcached 简介</title>
      <link>https://xueqing.github.io/blog/database/memcached/1_intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/database/memcached/1_intro/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#11-%e5%89%8d%e8%a8%80&#34;&gt;1.1 前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#12-%e7%89%b9%e7%82%b9&#34;&gt;1.2 特点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#13-%e6%94%af%e6%8c%81%e7%9a%84%e8%af%ad%e8%a8%80&#34;&gt;1.3 支持的语言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#14-memcached-%e7%94%a8%e6%88%b7&#34;&gt;1.4 Memcached 用户&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-1-前言&#34;&gt;1.1 前言&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Memcached 是一个自由开源、高性能、分布式内存对象缓存系统&lt;/li&gt;
&lt;li&gt;基于内存的 key-value 存储，用于存储小块的任意数据(字符串、对象)。这些数据可以是数据库调用、API 调用或页面渲染的结果&lt;/li&gt;
&lt;li&gt;设计简洁：便于快速开发，减轻开发难度，解决了大数据量缓存的问题。API 兼容大部分流行的开发语言&lt;/li&gt;
&lt;li&gt;本质上是一个简洁的 key-value 存储系统&lt;/li&gt;
&lt;li&gt;一般的使用目的：通过缓存数据库查询结果，减少数据库访问次数，以提高动态 web 应用的速度，提高可扩展性&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-2-特点&#34;&gt;1.2 特点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;协议简单&lt;/li&gt;
&lt;li&gt;基于 libevent 的事件处理

&lt;ul&gt;
&lt;li&gt;libevent 是一个基于事件触发的网络库&lt;/li&gt;
&lt;li&gt;libevent API 提供一种机制：当一个文件描述符的特定时间发生(可读、可写、出错)，或一个定时时间发生，libevent 自动执行用户指定的回调函数，来处理事件&lt;/li&gt;
&lt;li&gt;libevent 也支持信号或常规超时的回调&lt;/li&gt;
&lt;li&gt;libevent 用于取代网络服务器中的事件循环检查框架&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;内置内存存储方式&lt;/li&gt;
&lt;li&gt;分布式不互相通信&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-3-支持的语言&#34;&gt;1.3 支持的语言&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;许多语言实现了连接 Memcached 的客户端，以 Perl、PHP 为主&lt;/li&gt;
&lt;li&gt;其他语言包括：Python/Ruby/C#/C/C++/Lua&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-4-memcached-用户&#34;&gt;1.4 Memcached 用户&lt;/h2&gt;

&lt;p&gt;LiveJournal/Wikipedia/Flickr/Bebo/Twitter/Typepad/Yellowbot/Youtube/WordPress.com/Craigslist/Mixi&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
