<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 | kiki</title>
    <link>https://xueqing.github.io/blog/database/</link>
      <atom:link href="https://xueqing.github.io/blog/database/index.xml" rel="self" type="application/rss+xml" />
    <description>数据库</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language>
    <image>
      <url>https://xueqing.github.io/img/icon-192.png</url>
      <title>数据库</title>
      <link>https://xueqing.github.io/blog/database/</link>
    </image>
    
    <item>
      <title>Redis vs Memcached</title>
      <link>https://xueqing.github.io/blog/database/redis_vs_memcached/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xueqing.github.io/blog/database/redis_vs_memcached/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%e6%a6%82%e8%a7%88&#34;&gt;1 概览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%e4%bb%80%e4%b9%88%e6%98%af-memcached&#34;&gt;2 什么是 Memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%e4%bb%80%e4%b9%88%e6%98%af-redis&#34;&gt;3 什么是 Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-memcached-%e5%92%8c-redis-%e7%9a%84%e7%9b%b8%e4%bc%bc%e7%82%b9&#34;&gt;4 Memcached 和 Redis 的相似点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-memcached-%e5%92%8c-redis-%e7%9a%84%e4%b8%8d%e5%90%8c&#34;&gt;5 Memcached 和 Redis 的不同&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-%e9%80%89%e6%8b%a9-memcached-%e8%bf%98%e6%98%af-redis&#34;&gt;6 选择 Memcached 还是 Redis&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#61-%e9%80%89%e6%8b%a9-memcached&#34;&gt;6.1 选择 Memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#62-%e9%80%89%e6%8b%a9-redis&#34;&gt;6.2 选择 Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#63-%e6%80%bb%e7%bb%93&#34;&gt;6.3 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#7-%e5%8f%82%e8%80%83&#34;&gt;7 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-概览&#34;&gt;1 概览&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;关系型数据库是常见的数据库类型，但是不适合存储大量的数据。因此，引入了 NoSQL。它表示非关系型或非 SQL。Memcached 和 Redis 归类为 NoSQL&lt;/li&gt;
&lt;li&gt;Memcached 和 Redis 最大的区别在于

&lt;ul&gt;
&lt;li&gt;Memcached 是开源的，高性能，分布式内存缓存系统，可通过最小化数据加载代价而加速 web 应用&lt;/li&gt;
&lt;li&gt;Redis 是开源的，key-value 存储，用于建设可扩展的 web 应用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-什么是-memcached&#34;&gt;2 什么是 Memcached&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Memcached 是开源的，高性能，分布式内存缓存系统。它是持久化数据存储&lt;/li&gt;
&lt;li&gt;Memcached 主要的优势在于它降低了数据库加载代价，因此对于大量数据库加载的网站是非常有效且快速的&lt;/li&gt;
&lt;li&gt;Memcached 有存储命令、检索命令、统计命令

&lt;ul&gt;
&lt;li&gt;存储命令&lt;/li&gt;
&lt;li&gt;set：为一个新的或已有的键设置新值&lt;/li&gt;
&lt;li&gt;add：为一个新键设置值&lt;/li&gt;
&lt;li&gt;replace：替换已有的键的值&lt;/li&gt;
&lt;li&gt;append：为已有键增加一些数据&lt;/li&gt;
&lt;li&gt;检索命令&lt;/li&gt;
&lt;li&gt;get：获取键中保存的值&lt;/li&gt;
&lt;li&gt;delete：删除已有键&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-什么是-redis&#34;&gt;3 什么是 Redis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Redis 是开源的，内存型数据结构存储，用作数据库、缓存和消息代理&lt;/li&gt;
&lt;li&gt;Redis 代表远程字典服务器(remote dictionary server)。以 key-value 格式存储数据&lt;/li&gt;
&lt;li&gt;用户在 Redis 命令行界面(command line interfacem, CLI)，使用命令和数据库通信

&lt;ul&gt;
&lt;li&gt;SET：写数据到 Redis 数据存储&lt;/li&gt;
&lt;li&gt;GET：从 Redis 数据存储读数据&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redis 简单易用。它归类为 NoSQL 数据库。和像 MySQL，Oracle 的关系型数据库不同，Redis 不使用表存储数据

&lt;ul&gt;
&lt;li&gt;Redis 不使用常规的 SQL 命令，例如 select、delete、create、update 等&lt;/li&gt;
&lt;li&gt;Redis 使用数据结构存储数据。主要的数据结构是 string，list，set，sorted set，hash，bitmap 等&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redis 使用 C 语言编写，是开源的，跨平台的系统&lt;/li&gt;
&lt;li&gt;Redis 主要的优势在于它保存数据在内存中。这使得 Redis 非常快速。它也可以写数据到磁盘。Redis 可用作一个缓存系统或是全面的数据库&lt;/li&gt;
&lt;li&gt;Redis 另外一个优势是它可以和其他数据库一起使用。Redis 可以存储频繁访问的数据，而不访问主要的数据库，并且可以从主要的数据库获取其它的数据&lt;/li&gt;
&lt;li&gt;Redis 遵循 master-slave 架构。它提供性能、可扩展性且易用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-memcached-和-redis-的相似点&#34;&gt;4 Memcached 和 Redis 的相似点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;都归类为 NoSQL&lt;/li&gt;
&lt;li&gt;都以 key-value 格式存储数据：Redis 更准确的描述是作为数据结构存储&lt;/li&gt;
&lt;li&gt;都将存储数据到内存(毫秒级延迟)&lt;/li&gt;
&lt;li&gt;二者都是轻量级，和易失缓存一样快

&lt;ul&gt;
&lt;li&gt;Memcached 易失内存型的 key-value 存储&lt;/li&gt;
&lt;li&gt;Redis 不限于此，是一个数据结构服务&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;易用性、支持多种编程语言(Java/Python/PHP/C/C++/C#/JavaScript/NodeJS/Ruby/Go)&lt;/li&gt;
&lt;li&gt;支持数据分割：允许分布数据到多个节点，以便随着需求增长扩展数据处理能力&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-memcached-和-redis-的不同&#34;&gt;5 Memcached 和 Redis 的不同&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;不同点&lt;/th&gt;
&lt;th&gt;Memcached&lt;/th&gt;
&lt;th&gt;Redis&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;td&gt;开源的，高性能，分布式内存缓存系统，可通过最小化数据加载代价而加速 web 应用&lt;/td&gt;
&lt;td&gt;开源的，key-value 存储，可作为数据库、缓存和消息代理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;易安装&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;高级数据结构&lt;/td&gt;
&lt;td&gt;N(字符串和整型)&lt;/td&gt;
&lt;td&gt;Y(string/list/set/sorted set/hash)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;多线程架构&lt;/td&gt;
&lt;td&gt;Y(充分利用多核)&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;快照&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y(时间快照存储数据到磁盘，用于归档或恢复)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;复制&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y(支持 master-slave 复制)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;事务&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;pub/sub&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Lua 脚本&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;地理空间支持&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y(可查找两个元素之间的距离，或者查找给定范围的所有元素)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;速度&lt;/td&gt;
&lt;td&gt;读写速度更快&lt;/td&gt;
&lt;td&gt;读写速度快，但是取决于开发的应用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;6-选择-memcached-还是-redis&#34;&gt;6 选择 Memcached 还是 Redis&lt;/h2&gt;

&lt;h3 id=&#34;6-1-选择-memcached&#34;&gt;6.1 选择 Memcached&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;当缓存相当小的静态数据，比如 HTML 代码段：Memcached 内部的内存管理系统在最简单的应用场景下是更加高效，因为只占用相当小的内存资源用于元数据&lt;/li&gt;
&lt;li&gt;当数据大小动态变化，Memcached 的内存管理效率快速下降，有时内存会碎片化

&lt;ul&gt;
&lt;li&gt;同时，大数据集经常牵涉到序列化数据，需要更多空间存储&lt;/li&gt;
&lt;li&gt;如果使用Memcached，当重启时数据会丢失，而且重建缓存代价很好&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Memcached 在伸缩性方面比 Redis 好： Memcached 是多线程，很方便增加计算资源；Redis 大多数是单线程，在不丢失数据的情况下只能通过集群水平增长

&lt;ul&gt;
&lt;li&gt;集群是有效的扩展方案，但是在设置和操作方面很复杂&lt;/li&gt;
&lt;li&gt;Memcached 不支持复制&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Memcached 在处理高流量网站方面更好：可以一次读大量信息，而且响应时间快。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;memcached_redis_cluster.jpg&#34; alt=&#34;Memcached 和 Redis 的集群&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;6-2-选择-redis&#34;&gt;6.2 选择 Redis&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Redis 支持更多数据类型，所以作为缓存可以提供更更好的性能和效率&lt;/li&gt;
&lt;li&gt;数据回收(data eviction)：缓存使用数据回收机制，从内存删除旧数据为新数据分配空间

&lt;ul&gt;
&lt;li&gt;Memcached 使用 LRU(least recently used, 最近最少使用)算法，有时随机回收大小类似的数据&lt;/li&gt;
&lt;li&gt;Redis 支持细粒度控制回收，提供 6 种不同的回收策&lt;/li&gt;
&lt;li&gt;Redis 支持 lazy 和 active 的回收，即需要更多空间或主动地(proactively)&lt;/li&gt;
&lt;li&gt;Memcached 值支持 lazy 回收&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redis 作为数据结构的一些特性

&lt;ul&gt;
&lt;li&gt;丰富的数据类型和使用命令&lt;/li&gt;
&lt;li&gt;默认持久化到磁盘&lt;/li&gt;
&lt;li&gt;锁事务(WATCH/MULTI/EXEC)&lt;/li&gt;
&lt;li&gt;发布订阅(pub/sub)非常快&lt;/li&gt;
&lt;li&gt;值可达 512MB(Memcached 限制每个键 1MB)&lt;/li&gt;
&lt;li&gt;支持 Lua 脚本(2.6 开始)&lt;/li&gt;
&lt;li&gt;内嵌集群(3.0 开始)&lt;/li&gt;
&lt;li&gt;在各方面非常快&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redis 丰富的数据类型非常重要。它支持 Redis 提供共享队列(lists)，消息机制(pub/sub)，存储会话(hash)，高评分跟踪(sorted set)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;6-3-总结&#34;&gt;6.3 总结&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Memcached 和 Redis 归类为 NoSQL。它们不使用结构化化查询语言(structed query language)来存储、检索和操作数据&lt;/li&gt;
&lt;li&gt;不同点在于 Memcached 是开源、高性能分布式内存缓存系统，Redis 是开源、key-value 存储用于构建可扩展 web 应用&lt;/li&gt;
&lt;li&gt;使用 Memcached 还是 Redis 取决于应用：需要高级数据结构时可使用 Redis；降低数据库加载代价，加速 web 应用可使用 Memcached&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;7-参考&#34;&gt;7 参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.differencebetween.com/difference-between-memcached-and-vs-redis/&#34; target=&#34;_blank&#34;&gt;Difference Between Memcached and Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/memcached-vs-redis-which-one-pick-ranjeet-vimal/&#34; target=&#34;_blank&#34;&gt;Memcached vs Redis, Which One to Pick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/elasticache/redis-vs-memcached/&#34; target=&#34;_blank&#34;&gt;Choosing between Redis and Memcached&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
